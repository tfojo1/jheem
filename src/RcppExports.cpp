// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// do_get_access_indices
IntegerVector do_get_access_indices(IntegerVector dims, List to_access);
RcppExport SEXP _jheem_do_get_access_indices(SEXP dimsSEXP, SEXP to_accessSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type dims(dimsSEXP);
    Rcpp::traits::input_parameter< List >::type to_access(to_accessSEXP);
    rcpp_result_gen = Rcpp::wrap(do_get_access_indices(dims, to_access));
    return rcpp_result_gen;
END_RCPP
}
// dx_function
NumericVector dx_function(NumericVector hiv_positive, NumericVector hiv_negative, IntegerVector DIMS_HIV, IntegerVector DIMS_NONHIV, NumericVector AGING_RATES_HIV, NumericVector AGING_RATES_NONHIV, NumericVector FERTILITY_RATES_HIV, NumericVector FERTILITY_RATES_NONHIV, NumericVector FRACTION_BIRTHS_INFECTED, LogicalVector BIRTHS_DIMMASK_NONHIV, NumericVector BIRTH_PROPORTIONS_NONHIV, LogicalVector BIRTHS_DIMMASK_HIV_TO_NONHIV, NumericVector BIRTH_PROPORTIONS_HIV_TO_NONHIV, LogicalVector BIRTHS_DIMMASK_HIV_TO_HIV, NumericVector BIRTH_PROPORTIONS_HIV_TO_HIV, int NUM_TRANSMISSION_ROUTES, List CONTACT_MATRICES, List TRANSMISSIBILITIES, List SUSCEPTIBILITIES, NumericVector GLOBAL_TRANSMISSION_RATES, List CONTACT_DIMMASKS, NumericVector NEW_INFECTION_PROPORTIONS, IntegerVector COLLAPSE_INCIDENCE_INDICES, List HIV_TRANSITION_ARRAYS, IntegerVector HIV_TRANSITION_DIMENSIONS, List NONHIV_TRANSITION_ARRAYS, IntegerVector NONHIV_TRANSITION_DIMENSIONS, IntegerVector TRACKED_HIV_TRANSITION_INDICES, IntegerVector TRACKED_HIV_TRANSITION_FROM, IntegerVector TRACKED_HIV_TRANSITION_ARRAY_INDICES, IntegerVector TRACKED_HIV_TRANSITION_COLLAPSE_INDICES, IntegerVector TRACKED_NONHIV_TRANSITION_INDICES, IntegerVector TRACKED_NONHIV_TRANSITION_FROM, IntegerVector TRACKED_NONHIV_TRANSITION_ARRAY_INDICES, IntegerVector TRACKED_NONHIV_TRANSITION_COLLAPSE_INDICES, NumericVector HIV_SPECIFIC_MORTALITY_RATES, NumericVector GENERAL_MORTALITY_RATES_HIV, NumericVector GENERAL_MORTALITY_RATES_NONHIV, int FIXED_SIZE, LogicalVector FIXED_SIZE_STRATA_DIMMASK, bool MODEL_BIRTHS, bool MODEL_MATERNAL_TRANSMISSION, bool TRACK_HIV_SPECIFIC_MORTALITY, LogicalVector COLLAPSE_DIMMASK_HIV_SPECIFIC_MORTALITY, bool TRACK_HIV_OVERALL_MORTALITY, LogicalVector COLLAPSE_DIMMASK_HIV_OVERALL_MORTALITY, bool TRACK_NONHIV_MORTALITY, LogicalVector COLLAPSE_DIMMASK_NONHIV_MORTALITY);
RcppExport SEXP _jheem_dx_function(SEXP hiv_positiveSEXP, SEXP hiv_negativeSEXP, SEXP DIMS_HIVSEXP, SEXP DIMS_NONHIVSEXP, SEXP AGING_RATES_HIVSEXP, SEXP AGING_RATES_NONHIVSEXP, SEXP FERTILITY_RATES_HIVSEXP, SEXP FERTILITY_RATES_NONHIVSEXP, SEXP FRACTION_BIRTHS_INFECTEDSEXP, SEXP BIRTHS_DIMMASK_NONHIVSEXP, SEXP BIRTH_PROPORTIONS_NONHIVSEXP, SEXP BIRTHS_DIMMASK_HIV_TO_NONHIVSEXP, SEXP BIRTH_PROPORTIONS_HIV_TO_NONHIVSEXP, SEXP BIRTHS_DIMMASK_HIV_TO_HIVSEXP, SEXP BIRTH_PROPORTIONS_HIV_TO_HIVSEXP, SEXP NUM_TRANSMISSION_ROUTESSEXP, SEXP CONTACT_MATRICESSEXP, SEXP TRANSMISSIBILITIESSEXP, SEXP SUSCEPTIBILITIESSEXP, SEXP GLOBAL_TRANSMISSION_RATESSEXP, SEXP CONTACT_DIMMASKSSEXP, SEXP NEW_INFECTION_PROPORTIONSSEXP, SEXP COLLAPSE_INCIDENCE_INDICESSEXP, SEXP HIV_TRANSITION_ARRAYSSEXP, SEXP HIV_TRANSITION_DIMENSIONSSEXP, SEXP NONHIV_TRANSITION_ARRAYSSEXP, SEXP NONHIV_TRANSITION_DIMENSIONSSEXP, SEXP TRACKED_HIV_TRANSITION_INDICESSEXP, SEXP TRACKED_HIV_TRANSITION_FROMSEXP, SEXP TRACKED_HIV_TRANSITION_ARRAY_INDICESSEXP, SEXP TRACKED_HIV_TRANSITION_COLLAPSE_INDICESSEXP, SEXP TRACKED_NONHIV_TRANSITION_INDICESSEXP, SEXP TRACKED_NONHIV_TRANSITION_FROMSEXP, SEXP TRACKED_NONHIV_TRANSITION_ARRAY_INDICESSEXP, SEXP TRACKED_NONHIV_TRANSITION_COLLAPSE_INDICESSEXP, SEXP HIV_SPECIFIC_MORTALITY_RATESSEXP, SEXP GENERAL_MORTALITY_RATES_HIVSEXP, SEXP GENERAL_MORTALITY_RATES_NONHIVSEXP, SEXP FIXED_SIZESEXP, SEXP FIXED_SIZE_STRATA_DIMMASKSEXP, SEXP MODEL_BIRTHSSEXP, SEXP MODEL_MATERNAL_TRANSMISSIONSEXP, SEXP TRACK_HIV_SPECIFIC_MORTALITYSEXP, SEXP COLLAPSE_DIMMASK_HIV_SPECIFIC_MORTALITYSEXP, SEXP TRACK_HIV_OVERALL_MORTALITYSEXP, SEXP COLLAPSE_DIMMASK_HIV_OVERALL_MORTALITYSEXP, SEXP TRACK_NONHIV_MORTALITYSEXP, SEXP COLLAPSE_DIMMASK_NONHIV_MORTALITYSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type hiv_positive(hiv_positiveSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hiv_negative(hiv_negativeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type DIMS_HIV(DIMS_HIVSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type DIMS_NONHIV(DIMS_NONHIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type AGING_RATES_HIV(AGING_RATES_HIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type AGING_RATES_NONHIV(AGING_RATES_NONHIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FERTILITY_RATES_HIV(FERTILITY_RATES_HIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FERTILITY_RATES_NONHIV(FERTILITY_RATES_NONHIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FRACTION_BIRTHS_INFECTED(FRACTION_BIRTHS_INFECTEDSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type BIRTHS_DIMMASK_NONHIV(BIRTHS_DIMMASK_NONHIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIRTH_PROPORTIONS_NONHIV(BIRTH_PROPORTIONS_NONHIVSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type BIRTHS_DIMMASK_HIV_TO_NONHIV(BIRTHS_DIMMASK_HIV_TO_NONHIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIRTH_PROPORTIONS_HIV_TO_NONHIV(BIRTH_PROPORTIONS_HIV_TO_NONHIVSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type BIRTHS_DIMMASK_HIV_TO_HIV(BIRTHS_DIMMASK_HIV_TO_HIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIRTH_PROPORTIONS_HIV_TO_HIV(BIRTH_PROPORTIONS_HIV_TO_HIVSEXP);
    Rcpp::traits::input_parameter< int >::type NUM_TRANSMISSION_ROUTES(NUM_TRANSMISSION_ROUTESSEXP);
    Rcpp::traits::input_parameter< List >::type CONTACT_MATRICES(CONTACT_MATRICESSEXP);
    Rcpp::traits::input_parameter< List >::type TRANSMISSIBILITIES(TRANSMISSIBILITIESSEXP);
    Rcpp::traits::input_parameter< List >::type SUSCEPTIBILITIES(SUSCEPTIBILITIESSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GLOBAL_TRANSMISSION_RATES(GLOBAL_TRANSMISSION_RATESSEXP);
    Rcpp::traits::input_parameter< List >::type CONTACT_DIMMASKS(CONTACT_DIMMASKSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type NEW_INFECTION_PROPORTIONS(NEW_INFECTION_PROPORTIONSSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type COLLAPSE_INCIDENCE_INDICES(COLLAPSE_INCIDENCE_INDICESSEXP);
    Rcpp::traits::input_parameter< List >::type HIV_TRANSITION_ARRAYS(HIV_TRANSITION_ARRAYSSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type HIV_TRANSITION_DIMENSIONS(HIV_TRANSITION_DIMENSIONSSEXP);
    Rcpp::traits::input_parameter< List >::type NONHIV_TRANSITION_ARRAYS(NONHIV_TRANSITION_ARRAYSSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type NONHIV_TRANSITION_DIMENSIONS(NONHIV_TRANSITION_DIMENSIONSSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_HIV_TRANSITION_INDICES(TRACKED_HIV_TRANSITION_INDICESSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_HIV_TRANSITION_FROM(TRACKED_HIV_TRANSITION_FROMSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_HIV_TRANSITION_ARRAY_INDICES(TRACKED_HIV_TRANSITION_ARRAY_INDICESSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_HIV_TRANSITION_COLLAPSE_INDICES(TRACKED_HIV_TRANSITION_COLLAPSE_INDICESSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_NONHIV_TRANSITION_INDICES(TRACKED_NONHIV_TRANSITION_INDICESSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_NONHIV_TRANSITION_FROM(TRACKED_NONHIV_TRANSITION_FROMSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_NONHIV_TRANSITION_ARRAY_INDICES(TRACKED_NONHIV_TRANSITION_ARRAY_INDICESSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type TRACKED_NONHIV_TRANSITION_COLLAPSE_INDICES(TRACKED_NONHIV_TRANSITION_COLLAPSE_INDICESSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type HIV_SPECIFIC_MORTALITY_RATES(HIV_SPECIFIC_MORTALITY_RATESSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GENERAL_MORTALITY_RATES_HIV(GENERAL_MORTALITY_RATES_HIVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GENERAL_MORTALITY_RATES_NONHIV(GENERAL_MORTALITY_RATES_NONHIVSEXP);
    Rcpp::traits::input_parameter< int >::type FIXED_SIZE(FIXED_SIZESEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type FIXED_SIZE_STRATA_DIMMASK(FIXED_SIZE_STRATA_DIMMASKSEXP);
    Rcpp::traits::input_parameter< bool >::type MODEL_BIRTHS(MODEL_BIRTHSSEXP);
    Rcpp::traits::input_parameter< bool >::type MODEL_MATERNAL_TRANSMISSION(MODEL_MATERNAL_TRANSMISSIONSEXP);
    Rcpp::traits::input_parameter< bool >::type TRACK_HIV_SPECIFIC_MORTALITY(TRACK_HIV_SPECIFIC_MORTALITYSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type COLLAPSE_DIMMASK_HIV_SPECIFIC_MORTALITY(COLLAPSE_DIMMASK_HIV_SPECIFIC_MORTALITYSEXP);
    Rcpp::traits::input_parameter< bool >::type TRACK_HIV_OVERALL_MORTALITY(TRACK_HIV_OVERALL_MORTALITYSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type COLLAPSE_DIMMASK_HIV_OVERALL_MORTALITY(COLLAPSE_DIMMASK_HIV_OVERALL_MORTALITYSEXP);
    Rcpp::traits::input_parameter< bool >::type TRACK_NONHIV_MORTALITY(TRACK_NONHIV_MORTALITYSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type COLLAPSE_DIMMASK_NONHIV_MORTALITY(COLLAPSE_DIMMASK_NONHIV_MORTALITYSEXP);
    rcpp_result_gen = Rcpp::wrap(dx_function(hiv_positive, hiv_negative, DIMS_HIV, DIMS_NONHIV, AGING_RATES_HIV, AGING_RATES_NONHIV, FERTILITY_RATES_HIV, FERTILITY_RATES_NONHIV, FRACTION_BIRTHS_INFECTED, BIRTHS_DIMMASK_NONHIV, BIRTH_PROPORTIONS_NONHIV, BIRTHS_DIMMASK_HIV_TO_NONHIV, BIRTH_PROPORTIONS_HIV_TO_NONHIV, BIRTHS_DIMMASK_HIV_TO_HIV, BIRTH_PROPORTIONS_HIV_TO_HIV, NUM_TRANSMISSION_ROUTES, CONTACT_MATRICES, TRANSMISSIBILITIES, SUSCEPTIBILITIES, GLOBAL_TRANSMISSION_RATES, CONTACT_DIMMASKS, NEW_INFECTION_PROPORTIONS, COLLAPSE_INCIDENCE_INDICES, HIV_TRANSITION_ARRAYS, HIV_TRANSITION_DIMENSIONS, NONHIV_TRANSITION_ARRAYS, NONHIV_TRANSITION_DIMENSIONS, TRACKED_HIV_TRANSITION_INDICES, TRACKED_HIV_TRANSITION_FROM, TRACKED_HIV_TRANSITION_ARRAY_INDICES, TRACKED_HIV_TRANSITION_COLLAPSE_INDICES, TRACKED_NONHIV_TRANSITION_INDICES, TRACKED_NONHIV_TRANSITION_FROM, TRACKED_NONHIV_TRANSITION_ARRAY_INDICES, TRACKED_NONHIV_TRANSITION_COLLAPSE_INDICES, HIV_SPECIFIC_MORTALITY_RATES, GENERAL_MORTALITY_RATES_HIV, GENERAL_MORTALITY_RATES_NONHIV, FIXED_SIZE, FIXED_SIZE_STRATA_DIMMASK, MODEL_BIRTHS, MODEL_MATERNAL_TRANSMISSION, TRACK_HIV_SPECIFIC_MORTALITY, COLLAPSE_DIMMASK_HIV_SPECIFIC_MORTALITY, TRACK_HIV_OVERALL_MORTALITY, COLLAPSE_DIMMASK_HIV_OVERALL_MORTALITY, TRACK_NONHIV_MORTALITY, COLLAPSE_DIMMASK_NONHIV_MORTALITY));
    return rcpp_result_gen;
END_RCPP
}
// test
NumericVector test(List l);
RcppExport SEXP _jheem_test(SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(test(l));
    return rcpp_result_gen;
END_RCPP
}
// do_marginal_sums_hiv_positive
NumericVector do_marginal_sums_hiv_positive(NumericVector arr, IntegerVector dims, LogicalVector keep_mask);
RcppExport SEXP _jheem_do_marginal_sums_hiv_positive(SEXP arrSEXP, SEXP dimsSEXP, SEXP keep_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type arr(arrSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dims(dimsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type keep_mask(keep_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(do_marginal_sums_hiv_positive(arr, dims, keep_mask));
    return rcpp_result_gen;
END_RCPP
}
// do_marginal_sums_hiv_negative
NumericVector do_marginal_sums_hiv_negative(NumericVector arr, IntegerVector dims, LogicalVector keep_mask);
RcppExport SEXP _jheem_do_marginal_sums_hiv_negative(SEXP arrSEXP, SEXP dimsSEXP, SEXP keep_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type arr(arrSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dims(dimsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type keep_mask(keep_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(do_marginal_sums_hiv_negative(arr, dims, keep_mask));
    return rcpp_result_gen;
END_RCPP
}
// do_marginal_sums_general
NumericVector do_marginal_sums_general(NumericVector arr, IntegerVector dims, LogicalVector keep_mask);
RcppExport SEXP _jheem_do_marginal_sums_general(SEXP arrSEXP, SEXP dimsSEXP, SEXP keep_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type arr(arrSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dims(dimsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type keep_mask(keep_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(do_marginal_sums_general(arr, dims, keep_mask));
    return rcpp_result_gen;
END_RCPP
}
// ATTEMPTED_NEW_INCORRECT_do_expand_population
NumericVector ATTEMPTED_NEW_INCORRECT_do_expand_population(NumericVector src, IntegerVector target_dims, IntegerVector src_to_target_dim_map);
RcppExport SEXP _jheem_ATTEMPTED_NEW_INCORRECT_do_expand_population(SEXP srcSEXP, SEXP target_dimsSEXP, SEXP src_to_target_dim_mapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type src(srcSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type target_dims(target_dimsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type src_to_target_dim_map(src_to_target_dim_mapSEXP);
    rcpp_result_gen = Rcpp::wrap(ATTEMPTED_NEW_INCORRECT_do_expand_population(src, target_dims, src_to_target_dim_map));
    return rcpp_result_gen;
END_RCPP
}
// pull_time_varying_parameters
List pull_time_varying_parameters(List param_sets, double time);
RcppExport SEXP _jheem_pull_time_varying_parameters(SEXP param_setsSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type param_sets(param_setsSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(pull_time_varying_parameters(param_sets, time));
    return rcpp_result_gen;
END_RCPP
}
// test_pull_elem_a
int test_pull_elem_a(List l);
RcppExport SEXP _jheem_test_pull_elem_a(SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(test_pull_elem_a(l));
    return rcpp_result_gen;
END_RCPP
}
// print_vector
void print_vector(NumericVector v);
RcppExport SEXP _jheem_print_vector(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    print_vector(v);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jheem_do_get_access_indices", (DL_FUNC) &_jheem_do_get_access_indices, 2},
    {"_jheem_dx_function", (DL_FUNC) &_jheem_dx_function, 48},
    {"_jheem_test", (DL_FUNC) &_jheem_test, 1},
    {"_jheem_do_marginal_sums_hiv_positive", (DL_FUNC) &_jheem_do_marginal_sums_hiv_positive, 3},
    {"_jheem_do_marginal_sums_hiv_negative", (DL_FUNC) &_jheem_do_marginal_sums_hiv_negative, 3},
    {"_jheem_do_marginal_sums_general", (DL_FUNC) &_jheem_do_marginal_sums_general, 3},
    {"_jheem_ATTEMPTED_NEW_INCORRECT_do_expand_population", (DL_FUNC) &_jheem_ATTEMPTED_NEW_INCORRECT_do_expand_population, 3},
    {"_jheem_pull_time_varying_parameters", (DL_FUNC) &_jheem_pull_time_varying_parameters, 2},
    {"_jheem_test_pull_elem_a", (DL_FUNC) &_jheem_test_pull_elem_a, 1},
    {"_jheem_print_vector", (DL_FUNC) &_jheem_print_vector, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_jheem(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
